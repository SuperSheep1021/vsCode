{
    "Version": 1,
    "ItemKind": 9,
    "Items": {
        "UNITY_MATRIX_MVP": {
            "type": "float4x4",
            "documentation": "Current model * view * projection matrix."
        },
        "UNITY_MATRIX_MV": {
            "type": "float4x4",
            "documentation": "Current model * view matrix."
        },
        "UNITY_MATRIX_V": {
            "type": "float4x4",
            "documentation": "Current view matrix."
        },
        "UNITY_MATRIX_P": {
            "type": "float4x4",
            "documentation": "Current projection matrix."
        },
        "UNITY_MATRIX_VP": {
            "type": "float4x4",
            "documentation": "Current view * projection matrix."
        },
        "UNITY_MATRIX_T_MV": {
            "type": "float4x4",
            "documentation": "Transpose of model * view matrix."
        },
        "UNITY_MATRIX_IT_MV": {
            "type": "float4x4",
            "documentation": "Inverse transpose of model * view matrix."
        },
        "UNITY_MATRIX_TEXTURE0": {
            "type": "float4x4",
            "documentation": "Texture transformation matrices."
        },
        "UNITY_MATRIX_TEXTURE1": {
            "type": "float4x4",
            "documentation": "Texture transformation matrices."
        },
        "UNITY_MATRIX_TEXTURE2": {
            "type": "float4x4",
            "documentation": "Texture transformation matrices."
        },
        "UNITY_MATRIX_TEXTURE3": {
            "type": "float4x4",
            "documentation": "Texture transformation matrices."
        },
        "_Object2World": {
            "type": "float4x4",
            "documentation": "Current model matrix."
        },
        "unity_ObjectToWorld": {
            "type": "float4x4",
            "documentation": "Current model matrix."
        },
        "_World2Object": {
            "type": "float4x4",
            "documentation": "Inverse of current world matrix."
        },
        "unity_WorldToObject": {
            "type": "float4x4",
            "documentation": "Inverse of current world matrix."
        },
        "_WorldSpaceCameraPos": {
            "type": "float3",
            "documentation": "World space position of the camera."
        },
        "_ProjectionParams": {
            "type": "float4",
            "documentation": "x is 1.0 (or –1.0 if currently rendering with a flipped projection matrix), y is the camera’s near plane, z is the camera’s far plane and w is 1/FarPlane."
        },
        "_ScreenParams": {
            "type": "float4",
            "documentation": "x is the camera’s render target width in pixels, y is the camera’s render target height in pixels, z is 1.0 + 1.0/width and w is 1.0 + 1.0/height."
        },
        "_ZBufferParams": {
            "type": "float4",
            "documentation": "Used to linearize Z buffer values. x is (1-far/near), y is (far/near), z is (x/far) and w is (y/far)."
        },
        "unity_OrthoParams": {
            "type": "float4",
            "documentation": "x is orthographic camera’s width, y is orthographic camera’s height, z is unused and w is 1.0 when camera is orthographic, 0.0 when perspective."
        },
        "unity_CameraProjection": {
            "type": "float4x4",
            "documentation": "Camera’s projection matrix."
        },
        "unity_CameraInvProjection": {
            "type": "float4x4",
            "documentation": "Inverse of camera’s projection matrix."
        },
        "unity_CameraWorldClipPlanes[6]": {
            "type": "float4",
            "documentation": "Camera frustum plane world space equations, in this order: left, right, bottom, top, near, far."
        },
        "_Time": {
            "type": "float4",
            "documentation": "Time since level load (t/20, t, t*2, t*3), use to animate things inside the shaders."
        },
        "_SinTime": {
            "type": "float4",
            "documentation": "Sine of time: (t/8, t/4, t/2, t)."
        },
        "_CosTime": {
            "type": "float4",
            "documentation": "Cosine of time: (t/8, t/4, t/2, t)."
        },
        "unity_DeltaTime": {
            "type": "float4",
            "documentation": "Delta time: (dt, 1/dt, smoothDt, 1/smoothDt)."
        },
        "_LightColor0": {
            "type": "fixed4",
            "documentation": "Light color. Declared in Lighting.cginc."
        },
        "_WorldSpaceLightPos0": {
            "type": "float4",
            "documentation": "Directional lights: (world space direction, 0). Other lights: (world space position, 1)."
        },
        "_LightMatrix0": {
            "type": "float4x4",
            "documentation": "World-to-light matrix. Used to sample cookie & attenuation textures. Declared in AutoLight.cginc."
        },
        "unity_4LightPosX0": {
            "type": "float4",
            "documentation": "(ForwardBase pass only) world space positions of first four non-important point lights."
        },
        "unity_4LightPosY0": {
            "type": "float4",
            "documentation": "(ForwardBase pass only) world space positions of first four non-important point lights."
        },
        "unity_4LightPosZ0": {
            "type": "float4",
            "documentation": "(ForwardBase pass only) world space positions of first four non-important point lights."
        },
        "unity_4LightAtten0": {
            "type": "float4",
            "documentation": "(ForwardBase pass only) attenuation factors of first four non-important point lights."
        },
        "unity_LightColor": {
            "type": "half4[4]",
            "documentation": "(ForwardBase pass only) colors of of first four non-important point lights."
        },
        "_LightColor": {
            "type": "float4",
            "documentation": "Light color."
        },
        "unity_LightPosition": {
            "type": "float4[8]",
            "documentation": "View-space light positions. (-direction,0) for directional lights; (position,1) for point/spot lights."
        },
        "unity_LightAtten": {
            "type": "half4[8]",
            "documentation": "Light attenuation factors. x is cos(spotAngle/2) or –1 for non-spot lights; y is 1/cos(spotAngle/4) or 1 for non-spot lights; z is quadratic attenuation; w is squared light range."
        },
        "unity_SpotDirection": {
            "type": "float4[8]",
            "documentation": "View-space spot light positions; (0,0,1,0) for non-spot lights."
        },
        "unity_AmbientSky": {
            "type": "fixed4",
            "documentation": "Sky ambient lighting color in gradient ambient lighting case."
        },
        "unity_AmbientEquator": {
            "type": "fixed4",
            "documentation": "Equator ambient lighting color in gradient ambient lighting case."
        },
        "unity_AmbientGround": {
            "type": "fixed4",
            "documentation": "Ground ambient lighting color in gradient ambient lighting case."
        },
        "UNITY_LIGHTMODEL_AMBIENT": {
            "type": "fixed4",
            "documentation": "Ambient lighting color (sky color in gradient ambient case). Legacy variable."
        },
        "unity_FogColor": {
            "type": "fixed4",
            "documentation": "Fog color."
        },
        "unity_FogParams": {
            "type": "float4",
            "documentation": "Parameters for fog calculation: (density / sqrt(ln(2)), density / ln(2), –1/(end-start), end/(end-start)). x is useful for Exp2 fog mode, y for Exp mode, z and w for Linear mode."
        },
        "unity_LODFade": {
            "type": "float4",
            "documentation": "Level-of-detail fade when using LODGroup. x is fade (0..1), y is fade quantized to 16 levels, z and w unused"
        }
    }
}